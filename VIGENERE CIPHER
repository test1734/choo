import java.util.Scanner;

public class VigenereCipher {

    // Function to repeat the key to match message length
    private static String generateKey(String text, String key) {
        StringBuilder newKey = new StringBuilder();
        key = key.toUpperCase();
        for (int i = 0, j = 0; i < text.length(); i++) {
            char c = text.charAt(i);
            if (Character.isLetter(c)) {
                newKey.append(key.charAt(j % key.length()));
                j++;
            } else {
                newKey.append(c); // keep spaces/symbols
            }
        }
        return newKey.toString();
    }

    // Function to encrypt plaintext
    public static String encrypt(String text, String key) {
        text = text.toUpperCase();
        key = generateKey(text, key);
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < text.length(); i++) {
            char plainChar = text.charAt(i);
            char keyChar = key.charAt(i);

            if (Character.isLetter(plainChar)) {
                char encryptedChar = (char) ((plainChar + keyChar - 2 * 'A') % 26 + 'A');
                result.append(encryptedChar);
            } else {
                result.append(plainChar); // preserve non-letter characters
            }
        }

        return result.toString();
    }

    // Function to decrypt ciphertext
    public static String decrypt(String text, String key) {
        text = text.toUpperCase();
        key = generateKey(text, key);
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < text.length(); i++) {
            char cipherChar = text.charAt(i);
            char keyChar = key.charAt(i);

            if (Character.isLetter(cipherChar)) {
                char decryptedChar = (char) ((cipherChar - keyChar + 26) % 26 + 'A');
                result.append(decryptedChar);
            } else {
                result.append(cipherChar);
            }
        }

        return result.toString();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter message: ");
        String text = scanner.nextLine();

        System.out.print("Enter key: ");
        String key = scanner.nextLine();

        String encrypted = encrypt(text, key);
        System.out.println("Encrypted text: " + encrypted);

        String decrypted = decrypt(encrypted, key);
        System.out.println("Decrypted text: " + decrypted);

        scanner.close();
    }
}
